name: CD â€” Staging AKS

on:
  push:
    branches: [main] 

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      KUBECONFIG: ${{ github.workspace }}/kubeconfig
    steps:
      - uses: actions/checkout@v4

      - name: Write kubeconfig
        shell: bash
        run: |
          echo "${{ secrets.KUBE_CONFIG_STAGING }}" > "$KUBECONFIG"
          chmod 600 "$KUBECONFIG"

      # Create K8s secrets to pull images
      - name: Create secret in Kubernetes cluster
        uses: Azure/k8s-create-secret@v1.1
        with:
          # Container registry url
          container-registry-url: https://index.docker.io/v1/
          # Container registry username
          container-registry-username: '${{secrets.DOCKER_LOGIN}}'
          # Container registry password
          container-registry-password:  '${{secrets.DOCKER_PASSWORD}}'
          # Type of Kubernetes secret. For example, docker-registry or generic
          secret-type: docker-registry
          # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
          secret-name: docker-image-pull-secret
          namespace: ${{ env.K8S_NAMESPACE }}

      # Deploy to k8s cluster
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v1
        with:        
          # Path to the manifest files which will be used for deployment.
          manifests: |
            k8s/deployment.yml
            k8s/service.yml
          # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest
          images: ${{secrets.DOCKER_LOGIN}}/backend:${{github.sha}}
          # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
          imagepullsecrets: docker-image-pull-secret
          namespace: ${{ env.K8S_NAMESPACE }}
          # deploy/promote/reject
          action: deploy